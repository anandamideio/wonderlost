{"version":3,"file":"wonderlost.mjs","sources":["../node_modules/.pnpm/consola@3.2.3/node_modules/consola/dist/core.mjs","../node_modules/.pnpm/consola@3.2.3/node_modules/consola/dist/browser.mjs","../node_modules/.pnpm/@magik_io+mote@1.6.6/node_modules/@magik_io/mote/dist/El.mjs","../src/modules/fontLoader/utils/EventBus.ts","../src/class/Tome.ts","../src/submodules/toasted/Toasted.ts","../src/modules/fontLoader/CustomLoader.ts","../src/modules/fontLoader/utils/CSSParser.ts","../src/modules/fontLoader/utils/FontParser.ts","../src/modules/fontLoader/GoogleLoader.ts","../src/modules/fontLoader/utils/FontWatcher.ts","../src/modules/fontLoader/utils/Watcher.ts","../src/modules/fontLoader/FontLoader.ts","../src/submodules/narrator/Narrator.ts","../src/wonderlost.ts"],"sourcesContent":["const LogLevels = {\n  silent: Number.NEGATIVE_INFINITY,\n  fatal: 0,\n  error: 0,\n  warn: 1,\n  log: 2,\n  info: 3,\n  success: 3,\n  fail: 3,\n  ready: 3,\n  start: 3,\n  box: 3,\n  debug: 4,\n  trace: 5,\n  verbose: Number.POSITIVE_INFINITY\n};\nconst LogTypes = {\n  // Silent\n  silent: {\n    level: -1\n  },\n  // Level 0\n  fatal: {\n    level: LogLevels.fatal\n  },\n  error: {\n    level: LogLevels.error\n  },\n  // Level 1\n  warn: {\n    level: LogLevels.warn\n  },\n  // Level 2\n  log: {\n    level: LogLevels.log\n  },\n  // Level 3\n  info: {\n    level: LogLevels.info\n  },\n  success: {\n    level: LogLevels.success\n  },\n  fail: {\n    level: LogLevels.fail\n  },\n  ready: {\n    level: LogLevels.info\n  },\n  start: {\n    level: LogLevels.info\n  },\n  box: {\n    level: LogLevels.info\n  },\n  // Level 4\n  debug: {\n    level: LogLevels.debug\n  },\n  // Level 5\n  trace: {\n    level: LogLevels.trace\n  },\n  // Verbose\n  verbose: {\n    level: LogLevels.verbose\n  }\n};\n\nfunction isObject(value) {\n  return value !== null && typeof value === \"object\";\n}\nfunction _defu(baseObject, defaults, namespace = \".\", merger) {\n  if (!isObject(defaults)) {\n    return _defu(baseObject, {}, namespace, merger);\n  }\n  const object = Object.assign({}, defaults);\n  for (const key in baseObject) {\n    if (key === \"__proto__\" || key === \"constructor\") {\n      continue;\n    }\n    const value = baseObject[key];\n    if (value === null || value === void 0) {\n      continue;\n    }\n    if (merger && merger(object, key, value, namespace)) {\n      continue;\n    }\n    if (Array.isArray(value) && Array.isArray(object[key])) {\n      object[key] = [...value, ...object[key]];\n    } else if (isObject(value) && isObject(object[key])) {\n      object[key] = _defu(\n        value,\n        object[key],\n        (namespace ? `${namespace}.` : \"\") + key.toString(),\n        merger\n      );\n    } else {\n      object[key] = value;\n    }\n  }\n  return object;\n}\nfunction createDefu(merger) {\n  return (...arguments_) => (\n    // eslint-disable-next-line unicorn/no-array-reduce\n    arguments_.reduce((p, c) => _defu(p, c, \"\", merger), {})\n  );\n}\nconst defu = createDefu();\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === \"[object Object]\";\n}\nfunction isLogObj(arg) {\n  if (!isPlainObject(arg)) {\n    return false;\n  }\n  if (!arg.message && !arg.args) {\n    return false;\n  }\n  if (arg.stack) {\n    return false;\n  }\n  return true;\n}\n\nlet paused = false;\nconst queue = [];\nclass Consola {\n  constructor(options = {}) {\n    const types = options.types || LogTypes;\n    this.options = defu(\n      {\n        ...options,\n        defaults: { ...options.defaults },\n        level: _normalizeLogLevel(options.level, types),\n        reporters: [...options.reporters || []]\n      },\n      {\n        types: LogTypes,\n        throttle: 1e3,\n        throttleMin: 5,\n        formatOptions: {\n          date: true,\n          colors: false,\n          compact: true\n        }\n      }\n    );\n    for (const type in types) {\n      const defaults = {\n        type,\n        ...this.options.defaults,\n        ...types[type]\n      };\n      this[type] = this._wrapLogFn(defaults);\n      this[type].raw = this._wrapLogFn(\n        defaults,\n        true\n      );\n    }\n    if (this.options.mockFn) {\n      this.mockTypes();\n    }\n    this._lastLog = {};\n  }\n  get level() {\n    return this.options.level;\n  }\n  set level(level) {\n    this.options.level = _normalizeLogLevel(\n      level,\n      this.options.types,\n      this.options.level\n    );\n  }\n  prompt(message, opts) {\n    if (!this.options.prompt) {\n      throw new Error(\"prompt is not supported!\");\n    }\n    return this.options.prompt(message, opts);\n  }\n  create(options) {\n    const instance = new Consola({\n      ...this.options,\n      ...options\n    });\n    if (this._mockFn) {\n      instance.mockTypes(this._mockFn);\n    }\n    return instance;\n  }\n  withDefaults(defaults) {\n    return this.create({\n      ...this.options,\n      defaults: {\n        ...this.options.defaults,\n        ...defaults\n      }\n    });\n  }\n  withTag(tag) {\n    return this.withDefaults({\n      tag: this.options.defaults.tag ? this.options.defaults.tag + \":\" + tag : tag\n    });\n  }\n  addReporter(reporter) {\n    this.options.reporters.push(reporter);\n    return this;\n  }\n  removeReporter(reporter) {\n    if (reporter) {\n      const i = this.options.reporters.indexOf(reporter);\n      if (i >= 0) {\n        return this.options.reporters.splice(i, 1);\n      }\n    } else {\n      this.options.reporters.splice(0);\n    }\n    return this;\n  }\n  setReporters(reporters) {\n    this.options.reporters = Array.isArray(reporters) ? reporters : [reporters];\n    return this;\n  }\n  wrapAll() {\n    this.wrapConsole();\n    this.wrapStd();\n  }\n  restoreAll() {\n    this.restoreConsole();\n    this.restoreStd();\n  }\n  wrapConsole() {\n    for (const type in this.options.types) {\n      if (!console[\"__\" + type]) {\n        console[\"__\" + type] = console[type];\n      }\n      console[type] = this[type].raw;\n    }\n  }\n  restoreConsole() {\n    for (const type in this.options.types) {\n      if (console[\"__\" + type]) {\n        console[type] = console[\"__\" + type];\n        delete console[\"__\" + type];\n      }\n    }\n  }\n  wrapStd() {\n    this._wrapStream(this.options.stdout, \"log\");\n    this._wrapStream(this.options.stderr, \"log\");\n  }\n  _wrapStream(stream, type) {\n    if (!stream) {\n      return;\n    }\n    if (!stream.__write) {\n      stream.__write = stream.write;\n    }\n    stream.write = (data) => {\n      this[type].raw(String(data).trim());\n    };\n  }\n  restoreStd() {\n    this._restoreStream(this.options.stdout);\n    this._restoreStream(this.options.stderr);\n  }\n  _restoreStream(stream) {\n    if (!stream) {\n      return;\n    }\n    if (stream.__write) {\n      stream.write = stream.__write;\n      delete stream.__write;\n    }\n  }\n  pauseLogs() {\n    paused = true;\n  }\n  resumeLogs() {\n    paused = false;\n    const _queue = queue.splice(0);\n    for (const item of _queue) {\n      item[0]._logFn(item[1], item[2]);\n    }\n  }\n  mockTypes(mockFn) {\n    const _mockFn = mockFn || this.options.mockFn;\n    this._mockFn = _mockFn;\n    if (typeof _mockFn !== \"function\") {\n      return;\n    }\n    for (const type in this.options.types) {\n      this[type] = _mockFn(type, this.options.types[type]) || this[type];\n      this[type].raw = this[type];\n    }\n  }\n  _wrapLogFn(defaults, isRaw) {\n    return (...args) => {\n      if (paused) {\n        queue.push([this, defaults, args, isRaw]);\n        return;\n      }\n      return this._logFn(defaults, args, isRaw);\n    };\n  }\n  _logFn(defaults, args, isRaw) {\n    if ((defaults.level || 0) > this.level) {\n      return false;\n    }\n    const logObj = {\n      date: /* @__PURE__ */ new Date(),\n      args: [],\n      ...defaults,\n      level: _normalizeLogLevel(defaults.level, this.options.types)\n    };\n    if (!isRaw && args.length === 1 && isLogObj(args[0])) {\n      Object.assign(logObj, args[0]);\n    } else {\n      logObj.args = [...args];\n    }\n    if (logObj.message) {\n      logObj.args.unshift(logObj.message);\n      delete logObj.message;\n    }\n    if (logObj.additional) {\n      if (!Array.isArray(logObj.additional)) {\n        logObj.additional = logObj.additional.split(\"\\n\");\n      }\n      logObj.args.push(\"\\n\" + logObj.additional.join(\"\\n\"));\n      delete logObj.additional;\n    }\n    logObj.type = typeof logObj.type === \"string\" ? logObj.type.toLowerCase() : \"log\";\n    logObj.tag = typeof logObj.tag === \"string\" ? logObj.tag : \"\";\n    const resolveLog = (newLog = false) => {\n      const repeated = (this._lastLog.count || 0) - this.options.throttleMin;\n      if (this._lastLog.object && repeated > 0) {\n        const args2 = [...this._lastLog.object.args];\n        if (repeated > 1) {\n          args2.push(`(repeated ${repeated} times)`);\n        }\n        this._log({ ...this._lastLog.object, args: args2 });\n        this._lastLog.count = 1;\n      }\n      if (newLog) {\n        this._lastLog.object = logObj;\n        this._log(logObj);\n      }\n    };\n    clearTimeout(this._lastLog.timeout);\n    const diffTime = this._lastLog.time && logObj.date ? logObj.date.getTime() - this._lastLog.time.getTime() : 0;\n    this._lastLog.time = logObj.date;\n    if (diffTime < this.options.throttle) {\n      try {\n        const serializedLog = JSON.stringify([\n          logObj.type,\n          logObj.tag,\n          logObj.args\n        ]);\n        const isSameLog = this._lastLog.serialized === serializedLog;\n        this._lastLog.serialized = serializedLog;\n        if (isSameLog) {\n          this._lastLog.count = (this._lastLog.count || 0) + 1;\n          if (this._lastLog.count > this.options.throttleMin) {\n            this._lastLog.timeout = setTimeout(\n              resolveLog,\n              this.options.throttle\n            );\n            return;\n          }\n        }\n      } catch {\n      }\n    }\n    resolveLog(true);\n  }\n  _log(logObj) {\n    for (const reporter of this.options.reporters) {\n      reporter.log(logObj, {\n        options: this.options\n      });\n    }\n  }\n}\nfunction _normalizeLogLevel(input, types = {}, defaultLevel = 3) {\n  if (input === void 0) {\n    return defaultLevel;\n  }\n  if (typeof input === \"number\") {\n    return input;\n  }\n  if (types[input] && types[input].level !== void 0) {\n    return types[input].level;\n  }\n  return defaultLevel;\n}\nConsola.prototype.add = Consola.prototype.addReporter;\nConsola.prototype.remove = Consola.prototype.removeReporter;\nConsola.prototype.clear = Consola.prototype.removeReporter;\nConsola.prototype.withScope = Consola.prototype.withTag;\nConsola.prototype.mock = Consola.prototype.mockTypes;\nConsola.prototype.pause = Consola.prototype.pauseLogs;\nConsola.prototype.resume = Consola.prototype.resumeLogs;\nfunction createConsola(options = {}) {\n  return new Consola(options);\n}\n\nexport { Consola, LogLevels, LogTypes, createConsola };\n","import { createConsola as createConsola$1 } from './core.mjs';\nexport { Consola, LogLevels, LogTypes } from './core.mjs';\n\nclass BrowserReporter {\n  constructor(options) {\n    this.options = { ...options };\n    this.defaultColor = \"#7f8c8d\";\n    this.levelColorMap = {\n      0: \"#c0392b\",\n      // Red\n      1: \"#f39c12\",\n      // Yellow\n      3: \"#00BCD4\"\n      // Cyan\n    };\n    this.typeColorMap = {\n      success: \"#2ecc71\"\n      // Green\n    };\n  }\n  _getLogFn(level) {\n    if (level < 1) {\n      return console.__error || console.error;\n    }\n    if (level === 1) {\n      return console.__warn || console.warn;\n    }\n    return console.__log || console.log;\n  }\n  log(logObj) {\n    const consoleLogFn = this._getLogFn(logObj.level);\n    const type = logObj.type === \"log\" ? \"\" : logObj.type;\n    const tag = logObj.tag || \"\";\n    const color = this.typeColorMap[logObj.type] || this.levelColorMap[logObj.level] || this.defaultColor;\n    const style = `\n      background: ${color};\n      border-radius: 0.5em;\n      color: white;\n      font-weight: bold;\n      padding: 2px 0.5em;\n    `;\n    const badge = `%c${[tag, type].filter(Boolean).join(\":\")}`;\n    if (typeof logObj.args[0] === \"string\") {\n      consoleLogFn(\n        `${badge}%c ${logObj.args[0]}`,\n        style,\n        // Empty string as style resets to default console style\n        \"\",\n        ...logObj.args.slice(1)\n      );\n    } else {\n      consoleLogFn(badge, style, ...logObj.args);\n    }\n  }\n}\n\nfunction createConsola(options = {}) {\n  const consola2 = createConsola$1({\n    reporters: options.reporters || [new BrowserReporter({})],\n    prompt(message, options2 = {}) {\n      if (options2.type === \"confirm\") {\n        return Promise.resolve(confirm(message));\n      }\n      return Promise.resolve(prompt(message));\n    },\n    ...options\n  });\n  return consola2;\n}\nconst consola = createConsola();\n\nexport { consola, createConsola, consola as default };\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nfunction isAElement(selector) {\n  return selector instanceof HTMLElement;\n}\nclass El {\n  /**\n   * Create a new instance of El.\n   * @param {selectorString} selector - The CSS selector for the HTML element.\n   */\n  constructor(selector) {\n    __publicField(this, \"element\");\n    __publicField(this, \"debug\", false);\n    if (isAElement(selector)) {\n      this.element = selector;\n      return;\n    }\n    if (typeof selector === \"function\") {\n      const t = selector();\n      if (!t)\n        throw new Error(\"Function must return an element\");\n      if (this.debug)\n        console.log(\"Function returned\", t);\n      if (isAElement(t)) {\n        this.element = t;\n        return;\n      }\n      if (typeof t === \"string\") {\n        const element2 = document.querySelector(t);\n        if (!element2)\n          throw new Error(`You tried to grab using '${selector}' but that doesn't exist!`);\n        this.element = element2;\n        return;\n      }\n    }\n    const element = document.querySelector(selector);\n    if (!element)\n      throw new Error(`You tried to grab using '${selector}' but that doesn't exist!`);\n    this.element = element;\n    return;\n  }\n  /**\n  * Get the current HTML element.\n  * @returns {htmlElements<ElementName>} The current HTML element.\n  */\n  self() {\n    return this.element;\n  }\n  /**\n   * Toggle a class or classes on the current HTML element.\n   * @param {string | Array<string>} className - The class or classes to toggle.\n   * @returns {this} The current instance for chaining.\n   */\n  toggleClass(className) {\n    if (typeof className === \"string\" && className.includes(\" \"))\n      className = className.split(\" \");\n    if (!Array.isArray(className))\n      className = [className];\n    className.forEach((c) => this.element.classList.toggle(c));\n    return this;\n  }\n  /**\n  * Add a class or classes to the current HTML element.\n  * @param {Array<string> | string | (() => string) | (() => Array<string>)} className - The class or classes to add.\n  * @returns {this} The current instance for chaining.\n  */\n  addClass(className) {\n    if (typeof className === \"function\")\n      className = className();\n    if (typeof className === \"string\" && className.includes(\" \"))\n      className = className.split(\" \");\n    if (!Array.isArray(className))\n      className = [className];\n    className.forEach((singleClass) => this.element.classList.add(singleClass));\n    return this;\n  }\n  /**\n   * Remove a class or classes from the current HTML element.\n   * @param {Array<string> | string | (() => string) | (() => Array<string>)} className - The class or classes to remove.\n   * @returns {this} The current instance for chaining.\n   */\n  removeClass(className) {\n    if (typeof className === \"function\")\n      className = className();\n    if (typeof className === \"string\" && className.includes(\" \"))\n      className = className.split(\" \");\n    if (!Array.isArray(className))\n      className = [className];\n    className.forEach((singleClass) => this.element.classList.remove(singleClass));\n    return this;\n  }\n  /**\n   * Check if the current HTML element has a class.\n   * @param {string} className - The class to check.\n   * @returns {boolean} True if the element has the class, false otherwise.\n   */\n  hasClass(className) {\n    return this.element.classList.contains(className);\n  }\n  /**\n  * Replace the current HTML element with a string.\n  * @param {string} string - The string to replace the element with.\n  * @returns {this} The current instance for chaining.\n  */\n  replaceWith(string) {\n    this.element.outerHTML = string;\n    return this;\n  }\n  /**\n   * Replace the current HTML element with a new element.\n   * @template NewElement - The name of the new HTML element tag.\n   * @param {NewElement} tagName - The tag name of the new element.\n   * @param {string | undefined} idForNewElement - The id for the new element.\n   * @returns {El<NewElement>} A new instance of El for the new element.\n   */\n  replaceWithElement(tagName, idForNewElement = void 0) {\n    const newEl = document.createElement(tagName);\n    newEl.id = idForNewElement ?? this.element.id;\n    if (!this.element?.parentNode)\n      throw new Error(\"Element has no parent node, can not replace\");\n    this.element.parentNode.replaceChild(newEl, this.element);\n    return new El(`#${newEl.id}`);\n  }\n  /**\n   * Set the inner HTML of the current HTML element.\n   * @param {string} string - The new inner HTML.\n   * @returns {this} The current instance for chaining.\n   */\n  html(string) {\n    this.element.innerHTML = string;\n    return this;\n  }\n  /**\n   * Empty the inner HTML of the current HTML element.\n   * @returns {this} The current instance for chaining.\n   */\n  empty() {\n    this.element.innerHTML = \"\";\n    return this;\n  }\n  /**\n  * Check or uncheck the current HTML element if it is an input element.\n  * @param {boolean} trueOrFalse - Whether to check or uncheck the element.\n  * @returns {this} The current instance for chaining.\n  * @throws {TypeError} If the current HTML element is not an input element.\n  */\n  check(trueOrFalse) {\n    if (this.element instanceof HTMLInputElement) {\n      this.element.checked = trueOrFalse;\n      return this;\n    }\n    throw new TypeError(`[El::${this.element.id}] You can only use check() on input elements'`);\n  }\n  /**\n  * Get whether the current HTML element is checked if it is an input element.\n  * @returns {boolean} Whether the element is checked.\n  * @throws {TypeError} If the current HTML element is not an input element.\n  */\n  checked() {\n    if (this.element instanceof HTMLInputElement)\n      return this.element.checked;\n    throw new TypeError(`[El::${this.element.id}] You can only use checked() on input elements'`);\n  }\n  /**\n   * Dispatch a click event on the current HTML element.\n   * @returns {this} The current instance for chaining.\n   */\n  click() {\n    this.element.dispatchEvent(\n      new MouseEvent(\"click\", { view: window, bubbles: true, cancelable: false })\n    );\n    return this;\n  }\n  /**\n  * Return the current instance if the expression is true, otherwise return undefined, useful for chaining\n  * @param {boolean} expression - The expression to evaluate.\n  * @returns {this | undefined} The current instance if the expression is true, otherwise null.\n  */\n  if(expression) {\n    return expression ? this : null;\n  }\n  /**\n   * Wrap the current HTML element with a div.\n   * @param {string} classForDiv - The class for the div.\n   * @returns {this} The current instance for chaining.\n   */\n  wrap(classForDiv) {\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = classForDiv;\n    if (!this.element?.parentNode)\n      throw new Error(\"Element has no parent node, can not wrap\");\n    this.element.parentNode.insertBefore(wrapper, this.element);\n    this.element.parentNode.removeChild(this.element);\n    wrapper.appendChild(this.element);\n    return this;\n  }\n  /**\n   * Set the src attribute of the current HTML element if it is an image element.\n   * @param {string} srcString - The new src.\n   * @returns {this} The current instance for chaining.\n   * @throws {TypeError} If the current HTML element is not an image element.\n   */\n  src(srcString) {\n    if (this.element instanceof HTMLImageElement) {\n      this.element.src = srcString;\n    } else {\n      throw new TypeError(`[El::${this.element.id}] You can only use src() on image elements'`);\n    }\n    return this;\n  }\n  /**\n   * Set the alt attribute of the current HTML element if it is an image element.\n   * @param {string} altString - The new alt.\n   * @returns {this} The current instance for chaining.\n   * @throws {TypeError} If the current HTML element is not an image element.\n   */\n  alt(altString) {\n    if (this.element instanceof HTMLImageElement) {\n      this.element.alt = altString;\n    } else {\n      throw new TypeError(`[El::${this.element.id}] You can only use alt() on image elements'`);\n    }\n    return this;\n  }\n  /**\n   * Returns the parent element of the current HTML element.\n   * @returns El<ElementName, StrictTypes>\n   */\n  parent() {\n    const parentElement = this.element.parentElement;\n    if (!parentElement)\n      throw new Error(\"Element has no parent node, can not get parent\");\n    if (!parentElement.id)\n      parentElement.id = `parent-${this.element.id}`;\n    return new El(`#${parentElement?.id}`);\n  }\n  /**\n  * Remove the current HTML element from the DOM.\n  * @returns {this} The current instance for chaining.\n  */\n  remove() {\n    if (!this.element?.parentNode)\n      throw new Error(\"Element has no parent node, can not remove\");\n    this.element.parentNode.removeChild(this.element);\n    return this;\n  }\n  /**\n   * Clear the innerHTML of the current HTML element.\n   * @returns {this} The current instance for chaining.\n   */\n  clear() {\n    this.element.innerHTML = \"\";\n    return this;\n  }\n  /**\n   * Remove specified attributes from the current HTML element.\n   * @param {Array<string> | string} properties - The attributes to remove.\n   * @returns {this} The current instance for chaining.\n   */\n  unset(properties) {\n    if (typeof properties === \"string\")\n      properties = [properties];\n    properties.forEach((key) => {\n      this.element.removeAttribute(key);\n    });\n    return this;\n  }\n  /**\n   * Set specified attributes and their values for the current HTML element.\n   * @param {Record<string, any>} setObj - The attributes and their values to set.\n   * @returns {this} The current instance for chaining.\n   */\n  set(setObj) {\n    Object.entries(setObj).forEach(([key, value]) => {\n      if (!value)\n        return;\n      this.element.setAttribute(key, typeof value === \"string\" ? value : value.toString());\n    });\n    return this;\n  }\n  /**\n   * Get the first child element of the current HTML element.\n   * @returns {Element | undefined} The first child element, or undefined if there are no child elements.\n   */\n  firstChild() {\n    return this.element.firstElementChild;\n  }\n  /**\n   * Append or prepend a child element or HTML string to the current HTML element.\n   * @param {HTMLElement | string} child - The child element or HTML string to append or prepend.\n   * @param {'append' | 'prepend' | null} insertAt - Where to insert the child.\n   * @returns {this} The current instance for chaining.\n   */\n  child(child, insertAt = null) {\n    if (typeof child === \"string\") {\n      if (!insertAt || insertAt === \"append\") {\n        this.element.insertAdjacentHTML(\"beforeend\", child);\n      } else {\n        this.element.insertAdjacentHTML(\"afterbegin\", child);\n      }\n    } else {\n      if (insertAt === \"append\" || insertAt == null) {\n        this.element.append(child);\n      }\n      if (insertAt === \"prepend\") {\n        this.element.prepend(child);\n      }\n    }\n    return this;\n  }\n  /**\n   * Get all child nodes of the current HTML element.\n   * @returns {NodeListOf<ChildNode>} The child nodes.\n   */\n  children() {\n    return this.element.childNodes;\n  }\n  /**\n   * Set the text content of the current HTML element.\n   * @param {string | number | boolean} txt - The text content to set.\n   * @returns {this} The current instance for chaining.\n   */\n  text(txt) {\n    if (!txt)\n      return this;\n    this.element.textContent = txt.toString();\n    return this;\n  }\n  /**\n   * Set the text content of the current HTML element.\n   * @param {string} content - The text content to set.\n   * @returns {this|string|undefined} The current instance for chaining.\n   */\n  textContent(content) {\n    if (!content) {\n      return this.element.textContent;\n    }\n    this.element.textContent = content;\n    return this;\n  }\n  /**\n   * Append a text node as a child of the current HTML element.\n   * @param {string} s - The text to append.\n   * @returns {this} The current instance for chaining.\n   */\n  textChild(s) {\n    const textEl = document.createTextNode(s.toString());\n    this.element.appendChild(textEl);\n    return this;\n  }\n  /**\n   * Set the type attribute of the current HTML element.\n   * @param {string} T - The type attribute to set.\n   * @returns {this} The current instance for chaining.\n   */\n  type(_type) {\n    if (\"type\" in this.element)\n      this.element.setAttribute(\"type\", _type);\n    return this;\n  }\n  /**\n   * Set the name attribute of the current HTML element.\n   * @param {string} N - The name attribute to set.\n   * @returns {this} The current instance for chaining.\n   */\n  name(_name) {\n    if (\"name\" in this.element)\n      this.element.name = _name;\n    return this;\n  }\n  /**\n  * Set the type attribute of the current HTML element.\n  * @param {string} type - The type attribute to set.\n  * @returns {this} The current instance for chaining.\n  */\n  input(type) {\n    if (\"name\" in this.element)\n      this.element.name = this.element.id;\n    if (\"type\" in this.element)\n      this.element.setAttribute(\"type\", type);\n    return this;\n  }\n  /**\n   * Set the htmlFor attribute of the current HTML element.\n   * @param {string} elementTheLabelIsFor - The id of the element the label is for.\n   * @returns {this} The current instance for chaining.\n   */\n  htmlFor(elementTheLabelIsFor) {\n    if (\"htmlFor\" in this.element)\n      this.element.setAttribute(\"for\", elementTheLabelIsFor);\n    return this;\n  }\n  /**\n  * Set or retrieving the id attribute of the current HTML element.\n  * @param {string | undefined} idForEl - The id attribute to set.\n  * @returns {this | string} The current instance for chaining or the id value.\n  */\n  id(idForEl) {\n    if (!idForEl)\n      return this.element.id;\n    this.element.id = idForEl;\n    return this;\n  }\n  /**\n   * Get or set the value of the current HTML element.\n   * @param {string} newVal - The new value to set.\n   * @returns {this | string} The current instance for chaining or the value.\n   */\n  val(newVal) {\n    if (this.element instanceof HTMLInputElement || this.element instanceof HTMLSelectElement || this.element instanceof HTMLTextAreaElement || this.element instanceof HTMLOptionElement || this.element instanceof HTMLProgressElement) {\n      if (newVal === void 0 || newVal === null)\n        return this.element.value;\n      this.element.value = newVal instanceof Date ? `${newVal.getFullYear()}-${newVal.getMonth() + 1}-${newVal.getDate()}` : typeof newVal === \"string\" ? newVal : newVal.toString();\n      return this;\n    }\n    throw new TypeError(`[El::${this.element.id}] You can only use val() on input / select / text area / progress elements'`);\n  }\n  /**\n   * Get the value of a data attribute of the current HTML element.\n   * @param {string} dataSuffix - The suffix of the data attribute.\n   * @returns {string | null} The value of the data attribute.\n   */\n  data(dataSuffix) {\n    return this.element.getAttribute(`data-${dataSuffix}`);\n  }\n  /**\n   * Get the dataset of the current HTML element.\n   * @returns {DOMStringMap} The dataset.\n   */\n  dataset() {\n    return this.element.dataset;\n  }\n  /**\n   * Add an event listener to the current HTML element.\n   * @param {string} event - The event name to listen for.\n   * @param {EventListenerOrEventListenerObject} listener - The event listener function or object.\n   * @param {boolean | AddEventListenerOptions} options - The options for the event listener.\n   * @returns {this} The current instance for chaining.\n   */\n  on(event, listener, options) {\n    this.element.addEventListener(event, listener, options);\n    return this;\n  }\n  /**\n  * Add an event listener to the current HTML element that will be triggered only once.\n  * @param {string} eventName - The name of the event to listen for.\n  * @param {(event: Event) => void | Promise<void>} eventHandler - The event handler function.\n  * @returns {this} The current instance for chaining.\n  */\n  once(eventName, eventHandler) {\n    this.element.addEventListener(eventName, eventHandler, { once: true });\n    return this;\n  }\n  /**\n  * Dispatch a custom event on the current HTML element.\n  * @param {string} eventName - The name of the event to dispatch.\n  * @param {any} detail - The event detail.\n  * @returns {this} The current instance for chaining.\n  */\n  now(eventName, detail) {\n    this.element.dispatchEvent(new CustomEvent(eventName, {\n      detail\n    }));\n    return this;\n  }\n  /**\n   * Remove an event listener from the current HTML element.\n   * @param {string} event - The event name to remove the listener from.\n   * @param {EventListenerOrEventListenerObject} listener - The event listener function or object to remove.\n   * @param {boolean | EventListenerOptions} options - The options for the event listener.\n   * @returns {this} The current instance for chaining.\n   */\n  off(event, listener, options) {\n    this.element.removeEventListener(event, listener, options);\n    return this;\n  }\n  /**\n   * Trigger an event on the current HTML element.\n   * @param {string} event - The event name to trigger.\n   * @param {CustomEventInit} options - The options for the custom event.\n   * @returns {this} The current instance for chaining.\n   */\n  trigger(event, options) {\n    this.element.dispatchEvent(new CustomEvent(event, options));\n    return this;\n  }\n  /**\n  * Trigger a change event on the current HTML element.\n  * @returns {this} The current instance for chaining.\n  */\n  triggerChange() {\n    if (this.element instanceof HTMLSelectElement) {\n      const event = document.createEvent(\"HTMLEvents\");\n      event.initEvent(\"change\", true, true);\n      this.element.dispatchEvent(event);\n      return this;\n    }\n    throw new TypeError(`[El::${this.element.id}] You can only use triggerChange() on select elements'`);\n  }\n  /**\n  * Find all elements with the specified tag inside the current HTML element.\n  * @param {string} tag - The tag name to search for.\n  * @returns {NodeList} A NodeList containing all matching elements.\n  */\n  find(tag) {\n    return this.element.querySelectorAll(tag);\n  }\n  /**\n   * Dispatch a custom event on the current HTML element.\n   * @param {string} eventName - The name of the event to dispatch.\n   * @returns {this} The current instance for chaining.\n   */\n  dispatchEvent(eventName) {\n    this.element.dispatchEvent(new Event(eventName));\n    return this;\n  }\n  /**\n   * Execute a callback function with the current HTML element's id as the argument.\n   * @param {(id: idString) => any} cb - The callback function to execute.\n   * @returns {this} The current instance for chaining.\n   */\n  nestFrom(cb) {\n    cb(`#${this.element.id}`);\n    return this;\n  }\n}\nfunction el(selector) {\n  return new El(selector);\n}\n\nexport { El, el };\n","import type { FontsLoaderConfig } from '../types';\n\nexport enum FontEvents {\n  LOADING = 'loading',\n  ACTIVE = 'active',\n  INACTIVE = 'inactive',\n  FONT_LOADING = 'fontloading',\n  FONT_ACTIVE = 'fontactive',\n  FONT_INACTIVE = 'fontinactive',\n}\n\nexport class EventBus {\n  private namespace_ = 'wf';\n  private classSeparator_ = '-';\n  private event_: Event;\n  private config_: FontsLoaderConfig;\n  private htmlElement_;\n\n  constructor(config: FontsLoaderConfig) {\n    this.config_ = config;\n    this.event_ = document.createEvent('CustomEvent');\n    this.htmlElement_ = document.documentElement;\n    document.addEventListener(\n      FontEvents.LOADING,\n      () => {\n        this.handleLoading_();\n      },\n      false\n    );\n    document.addEventListener(\n      FontEvents.ACTIVE,\n      () => {\n        this.handleActive_();\n      },\n      false\n    );\n    document.addEventListener(\n      FontEvents.INACTIVE,\n      () => {\n        this.handleInactive_();\n      },\n      false\n    );\n    document.addEventListener(\n      FontEvents.FONT_LOADING,\n      (event) => {\n        const { detail } = event as CustomEvent;\n        this.handleFontLoading_(detail);\n      },\n      false\n    );\n    document.addEventListener(\n      FontEvents.FONT_ACTIVE,\n      (event) => {\n        const { detail } = event as CustomEvent;\n        this.handleFontActive_(detail);\n      },\n      false\n    );\n    document.addEventListener(\n      FontEvents.FONT_INACTIVE,\n      (event) => {\n        const { detail } = event as CustomEvent;\n        this.handleFontInactive_(detail);\n      },\n      false\n    );\n  }\n\n  private handleLoading_() {\n    if (this.config_.events && this.config_.loading) {\n      this.config_.loading.call(null);\n      this.addClassToHtml_(FontEvents.LOADING);\n      this.removeClassFromHtml_(FontEvents.ACTIVE);\n      this.removeClassFromHtml_(FontEvents.INACTIVE);\n    }\n  }\n\n  private handleActive_() {\n    if (this.config_.events && this.config_.active) {\n      this.config_.active.call(null);\n      this.removeClassFromHtml_(FontEvents.LOADING);\n      this.addClassToHtml_(FontEvents.ACTIVE);\n      this.removeClassFromHtml_(FontEvents.INACTIVE);\n    }\n  }\n\n  private handleInactive_() {\n    if (this.config_.events && this.config_.inactive) {\n      this.config_.inactive.call(null);\n      this.removeClassFromHtml_(FontEvents.LOADING);\n      this.removeClassFromHtml_(FontEvents.ACTIVE);\n      this.addClassToHtml_(FontEvents.INACTIVE);\n    }\n  }\n\n  private handleFontLoading_(font: string) {\n    if (this.config_.events && this.config_.fontloading) {\n      const fontArray = font.split(':');\n      this.config_.fontloading.call(null, fontArray[0], fontArray[1]);\n      this.addClassToHtml_(FontEvents.LOADING, [fontArray[0], fontArray[1]]);\n      this.removeClassFromHtml_(FontEvents.ACTIVE, [fontArray[0], fontArray[1]]);\n      this.removeClassFromHtml_(FontEvents.INACTIVE, [fontArray[0], fontArray[1]]);\n    }\n  }\n\n  private handleFontActive_(font: string) {\n    if (this.config_.events && this.config_.fontactive) {\n      const fontArray = font.split(':');\n      this.config_.fontactive.call(null, fontArray[0], fontArray[1]);\n      this.removeClassFromHtml_(FontEvents.LOADING, [fontArray[0], fontArray[1]]);\n      this.addClassToHtml_(FontEvents.ACTIVE, [fontArray[0], fontArray[1]]);\n      this.removeClassFromHtml_(FontEvents.INACTIVE, [fontArray[0], fontArray[1]]);\n    }\n  }\n\n  private handleFontInactive_(font: string) {\n    if (this.config_.events && this.config_.fontinactive) {\n      const fontArray = font.split(':');\n      this.config_.fontinactive.call(null, fontArray[0], fontArray[1]);\n      this.removeClassFromHtml_(FontEvents.LOADING, [fontArray[0], fontArray[1]]);\n      this.removeClassFromHtml_(FontEvents.ACTIVE, [fontArray[0], fontArray[1]]);\n      this.addClassToHtml_(FontEvents.INACTIVE, [fontArray[0], fontArray[1]]);\n    }\n  }\n\n  private addClassToHtml_(className: string, prefix: string[] = []) {\n    this.htmlElement_.classList.add(\n      [this.namespace_].concat(prefix.map(this.sanitizeClassName_), className).join(this.classSeparator_)\n    );\n  }\n\n  private removeClassFromHtml_(className: string, prefix: string[] = []) {\n    this.htmlElement_.classList.remove(\n      [this.namespace_].concat(prefix.map(this.sanitizeClassName_), className).join(this.classSeparator_)\n    );\n  }\n\n  private sanitizeClassName_(className: string) {\n    return className.replace(/[\\W_]+/g, '').toLowerCase();\n  }\n}\n","import consola from \"consola\";\nimport type ApplicationV2 from 'src/types/foundry/client-esm/applications/api/application.mjs';\nimport type { DataModel } from \"src/types/foundry/common/abstract/module.mjs\";\nimport type { MaybePromise } from 'src/types/types/utils.mjs';\n\ntype CoreLifeCycleHooks = 'init' | 'ready' | 'error' | 'setup' | 'i18nInit'\n\ntype HookableEvents = \"renderChatLog\" | \"renderChatMessage\" | 'renderApplication' | CoreLifeCycleHooks\ntype HookEvent = (\n  app: Application,\n  html: JQuery,\n  data?: any,\n) => void | Promise<void>;\n\ninterface RuleMenu extends ClientSettings.PartialSettingSubmenuConfig {\n\n}\n\ninterface Rule {\n  name: string;\n  hint?: string;\n  restricted?: boolean;\n  onChange?: (value: unknown) => void | Promise<void>;\n  /** true if you want to prompt the user to reload */\n  requiresReload?: boolean;\n  /**\n   * @default true\n   * @comment false if you dont want it to show in module config\n   */\n  config?: boolean;\n  choices?: Record<string, string>;\n}\n\n// Define rule-specific types\ntype NumberRule = Rule & {\n  type: typeof Number;\n  range?: { min?: number; max?: number; step?: number };\n  defaultValue?: number;\n};\ntype BooleanRule = Rule & { type: typeof Boolean; defaultValue?: boolean };\ntype StringRule = Rule & { type: typeof String; defaultValue?: string };\ntype ObjectRule = Rule & {\n  type: typeof Object;\n  defaultValue?: Record<string, unknown>;\n};\ntype ArrayRule = Rule & {\n  type: typeof Array;\n  defaultValue?: unknown[];\n};\ntype ColorRule = Rule & { type: typeof Color; defaultValue?: string };\n\n// Define the Rules union type\ntype Rules =\n  | NumberRule\n  | BooleanRule\n  | StringRule\n  | ObjectRule\n  | ArrayRule\n  | ColorRule;\n\ninterface TomeRuleConstructor {\n  globalSettings?: Array<Rules & { scope?: \"world\" | \"client\" }>;\n  clientSettings?: Array<Rules & { scope?: \"world\" | \"client\" }>;\n}\n\nexport abstract class Tome {\n  public moduleName: string;\n  public moduleDescription: string;\n  public settings: Array<Rules & { scope: \"world\" | \"client\" }> = [];\n  public hooks = new Map([] as Array<[HookableEvents, HookEvent]>);\n  public socketFns: Map<string, (data: unknown) => void> = new Map();\n  public DEBUG?: boolean = false;\n  public ready = false;\n\n  get name() {\n    return this.moduleName;\n  }\n\n  get lowercaseName() {\n    return this.moduleName.toLowerCase();\n  }\n\n  get hasHooks() {\n    return this.hooks.size > 0;\n  }\n\n  get hasSettings() {\n    return this.settings.length > 0;\n  }\n\n  get hasSocketFns() {\n    return this.socketFns.size > 0;\n  }\n\n  get needsEarlyInitialization() {\n    return (this.hasSettings\n      || (this.hasHooks && this.hooks.has('init') || this.hasHooks && this.hooks.has('ready'))\n      || this.hasSocketFns)\n  }\n\n  constructor(\n    pTome: Pick<Tome, \"moduleDescription\" | \"moduleName\"> & {\n      settings?: TomeRuleConstructor;\n      hooks?: Tome[\"hooks\"];\n      socketFns?: Tome[\"socketFns\"];\n      DEBUG?: boolean;\n    },\n  ) {\n    this.moduleName = pTome.moduleName;\n    this.moduleDescription = pTome.moduleDescription;\n    if (pTome?.settings) {\n      this.settings =\n        pTome.settings.globalSettings?.map((s) => {\n          s.scope = \"world\";\n          return s as Rules & { scope: \"world\" };\n        }) ?? [];\n\n      this.settings.push(\n        ...(pTome.settings.clientSettings?.map((s) => {\n          s.scope = \"client\";\n          return s as Rules & { scope: \"client\" };\n        }) ?? []),\n      );\n    }\n\n    this.hooks = pTome?.hooks ?? new Map();\n    this.socketFns = pTome?.socketFns ?? new Map();\n    this.DEBUG = pTome?.DEBUG ?? false;\n  }\n\n  public addHook(\n    event: HookableEvents,\n    callback: HookEvent,\n    overwrite: boolean = false,\n  ) {\n    if (!this.hooks.has(event) || overwrite) {\n      this.hooks.set(event, callback);\n    } else {\n      consola.warn(`Hook for event \"${event}\" already exists.`);\n    }\n  }\n\n  public initializeHooks() {\n    this.hooks.forEach((callback, event) => {\n      if (this.DEBUG) {\n        consola.box({\n          title: `[TOME::${this.moduleName}] => Registering hook for ${event}`,\n          additional: { callback: callback.toString() },\n        })\n      }\n\n      Hooks.on(event, callback);\n    });\n\n    return this;\n  }\n\n  // Method to register global settings\n  public registerSetting(rule: Rules & { scope: \"world\" | \"client\" }): Tome {\n    switch (rule.type) {\n      case Number:\n        this.settings.push({ ...rule } as NumberRule & {\n          scope: \"world\" | \"client\";\n        });\n        break;\n      case Boolean:\n        this.settings.push({ ...rule } as BooleanRule & {\n          scope: \"world\" | \"client\";\n        });\n        break;\n      case String:\n        this.settings.push({ ...rule } as StringRule & {\n          scope: \"world\" | \"client\";\n        });\n        break;\n      case Object:\n        this.settings.push({ ...rule } as ObjectRule & {\n          scope: \"world\" | \"client\";\n        });\n        break;\n      case Array:\n        this.settings.push({ ...rule } as ArrayRule & {\n          scope: \"world\" | \"client\";\n        });\n        break;\n      case Color:\n        this.settings.push({ ...rule } as ColorRule & {\n          scope: \"world\" | \"client\";\n        });\n        break;\n      default:\n        throw new Error(`Unsupported rule type: ${rule.type}`);\n    }\n\n    return this;\n  }\n\n  public registerSettings(\n    rules: Array<Rules & { scope: \"world\" | \"client\" }>,\n  ): Tome {\n    rules.forEach((rule) => {\n      this.registerSetting(rule);\n    });\n    return this;\n  }\n\n  public initializeSettings() {\n    this.settings.forEach((setting) => {\n      if (this.DEBUG) {\n        consola.box({\n          title: `[TOME::${this.moduleName}] => Registering ${setting.name}`,\n          additional: { ...setting },\n        });\n      }\n\n      game.settings?.register('wonderlost', Tome.kabob(`${this.lowercaseName}-${setting.name}`), {\n        name: setting.name,\n        hint: setting.hint,\n        scope: setting.scope,\n        config: true,\n        default: setting?.defaultValue,\n        type: setting.type as unknown as DataModel<any, any>,\n        // @ts-ignore -> These are only there when the type is correct, but TS doesn't know that\n        choices: setting?.choices,\n        // @ts-ignore -> Same as above\n        range: setting?.range,\n        onChange: setting.onChange,\n        requiresReload: setting.requiresReload,\n      });\n    });\n\n    return this;\n  }\n\n  public getSetting<ExpectedReturn = any>(settingName: string) {\n    return game.settings?.get('wonderlost', Tome.kabob(`${this.lowercaseName}-${settingName}`)) as ExpectedReturn;\n  }\n\n  public async setSetting(settingName: string, value: unknown) {\n    return game.settings?.set('wonderlost', Tome.kabob(`${this.lowercaseName}-${settingName}`), value);\n  }\n\n  public registerSettingSubmenu<Data extends Record<string, any> = Record<string, any>>(menu: RuleMenu & { data: Data }) {\n    game.settings?.register('wonderlost', Tome.kabob(`${this.lowercaseName}-allSettings`), {\n      scope: 'world',\n      config: false,\n      type: Object as unknown as DataModel<any, any>,\n      default: menu.data,\n    })\n\n    const lowercaseName = `${this.lowercaseName}`;\n    const moduleName = this.moduleName.toString();\n\n    game.settings?.registerMenu('wonderlost', Tome.kabob(`${this.lowercaseName}-allSettings`), {\n      name: menu.name,\n      label: menu.label,\n      hint: menu.hint,\n      icon: menu.icon,\n      restricted: menu.restricted,\n      // @ts-ignore\n      type: class extends FormApplication {\n        constructor() {\n          super({});\n        }\n\n        static get defaultOptions() {\n          return foundry.utils.mergeObject(super.defaultOptions, {\n            title: `Wonderlost: ${moduleName}`,\n            id: `${moduleName}-settings`,\n            width: 550,\n            height: \"auto\",\n            popOut: true,\n            closeOnSubmit: true as boolean,\n            template: `modules/wonderlost/submodules/${lowercaseName}/settings.hbs`,\n          });\n        }\n\n        static get moduleName() {\n          return moduleName\n        }\n\n        getData() {\n          return foundry.utils.isEmpty(game.settings?.get(moduleName, `${moduleName.toLowerCase()}-allSettings`) as any) ?\n            game.settings?.get(moduleName, `${moduleName.toLowerCase()}-allSettings`) as MaybePromise<Data>\n            : menu.data as MaybePromise<Data>;\n        }\n\n        async _updateObject(_event: Event, formData: Data) {\n          await game.settings?.set(moduleName, `${moduleName.toLowerCase()}-allSettings`, formData);\n        }\n      }\n    })\n  }\n\n  public initializeSocketListeners() {\n    if (this.socketFns.size === 0) return this;\n\n    this.socketFns.forEach((fn, event) => {\n      if (this.DEBUG) {\n        consola.info(`Registering socket listener for event: ${event}`);\n      }\n\n      game.socket?.on(event, (data: unknown) => fn(data));\n    });\n\n    return this;\n  }\n\n  public initialize() {\n    if (this.hasSettings) {\n      this.initializeSettings()\n    }\n\n    if (this.hasHooks) {\n      this.initializeHooks();\n    }\n\n    if (this.hasSocketFns) {\n      this.initializeSocketListeners();\n    }\n\n    this.ready = true;\n\n    return this;\n  }\n\n  // Utility function to expand object rules\n  static expandObject(value: unknown): Record<string, unknown> {\n    if (typeof value === \"object\" && value !== null) {\n      return Object.entries(value).reduce(\n        (acc, [key, val]) => {\n          if (typeof val === \"string\") {\n            try {\n              acc[key] = JSON.parse(val);\n            } catch (e) {\n              acc[key] = val;\n            }\n          } else {\n            acc[key] = val;\n          }\n          return acc;\n        },\n        {} as Record<string, unknown>,\n      );\n    }\n    throw new Error(`Expected object but received ${typeof value}`);\n  }\n\n  static kabob(str: string) {\n    if (!str) return \"\";\n    return str.split(\"\").join(\"-\");\n  }\n}\n","import { El } from \"@magik_io/mote\";\nimport consola from 'consola';\nimport { Tome } from \"../../class/Tome\";\nimport { TweenMax } from \"/scripts/greensock/esm/all.js\";\n\nexport class Toasted extends Tome {\n  public maxMessagesOnScreen = 5;\n  public alwaysShowNotifications = true;\n  public fadeOutDelay = 3000;\n\n  public ToastedReady = false;\n\n  public menu: El<'div', true> | null = null;\n\n  constructor(DEBUG = false) {\n    super({\n      moduleName: \"Toasted\",\n      moduleDescription: \"A customizable toast notification system\",\n      hooks: new Map([\n        [\n          \"renderChatLog\",\n          async (app, html) => {\n            try {\n              if (document.body.classList.contains(\"stream\")) return;\n              const div = new El<'div', true>(\n                html[0]\n                  .querySelector(`#chat-log`)!\n                  .cloneNode(false) as unknown as `div#${string}`,\n              )\n                .addClass(this.moduleName)\n                .id(this.lowercaseName)\n                .on(\"click\", (ev) => this.handleMouseEvent(ev))\n                .on(\"contextmenu\" as \"click\", (ev) => this.handleMouseEvent(ev));\n\n              document.querySelector('body')?.appendChild(div.element);\n\n              this.ready = true;\n              this.ToastedReady = true;\n\n              if (this.DEBUG) consola.success(`${this.moduleName} | Chat log rendered`);\n            } catch (error) {\n\n            }\n          },\n        ],\n        [\n          \"renderChatMessage\",\n          async (_app, html, _options) => {\n            if (this.ready && this.ToastedReady) {\n              this.addMessage(html[0].cloneNode(true) as ChildNode);\n            }\n          }\n        ]\n      ]),\n      socketFns: new Map([\n        [\n          \"module.toasted\",\n          (data) => {\n            if (this.alwaysShowNotifications) {\n              ui.notifications?.info(data);\n              return;\n            }\n\n            consola.info(data);\n\n            // this.toasts.push(data);\n            // if (this.toasts.length > this.maxMessagesOnScreen) this.toasts.shift();\n\n            // const toast = ui.notifications?.info(data);\n            // toast?.element.addEventListener(\"click\", () => {\n            //   this.toasts.shift();\n            //   toast.close();\n            // });\n          },\n        ]\n      ]),\n      DEBUG\n    });\n\n    this.registerSettings([\n      {\n        name: \"Toast Duration\",\n        hint: \"How long would you like a message to stay on screen?\",\n        type: Number,\n        defaultValue: this.fadeOutDelay,\n        range: { min: 1000, max: 10000, step: 250 },\n        scope: \"client\",\n        restricted: false,\n        onChange: (value) => {\n          this.fadeOutDelay = Number(value);\n        },\n      },\n      {\n        name: \"Max Messages\",\n        hint: \"How many messages would you like to see on screen (at most)?\",\n        type: Number,\n        defaultValue: this.maxMessagesOnScreen,\n        range: { min: 1, max: 10, step: 1 },\n        scope: \"client\",\n        restricted: false,\n        onChange: (value) => {\n          this.maxMessagesOnScreen = Number(value);\n        },\n      },\n      {\n        name: \"Always Show Notifications\",\n        hint: \"Would you prefer toast are shown even if the chat panel is open?\",\n        type: Boolean,\n        defaultValue: this.alwaysShowNotifications,\n        scope: \"client\",\n        restricted: false,\n        onChange: (value) => {\n          this.alwaysShowNotifications = Boolean(value);\n        },\n      },\n    ]);\n  }\n\n  static expandSidebarInstant(sidebar: HTMLDivElement) {\n    if (!sidebar) {\n      throw new Error(\n        \"[Toasted:expandSidebarInstant] -> Error: Sidebar element was not passed\",\n      );\n    }\n\n    const sideB = new El<\"div\", true>(sidebar)\n      .removeClass(\"collapsed\")\n      .unset([\"width\", \"height\"]);\n    ui.sidebar._collapsed = false;\n\n    const icon = sideB.element.querySelector(\"#sidebar-tabs a.collapse i\") as HTMLDivElement;\n\n    if (!icon) {\n      throw new Error(\n        \"[Toasted:expandSidebarInstant] -> Error: Icon element was not found\",\n      );\n    }\n\n    new El(icon).removeClass(\"fa-caret-left\").addClass(\"fa-caret-right\");\n\n    Hooks.callAll(\"sidebarCollapse\", ui.sidebar, ui.sidebar._collapsed);\n  }\n\n  static findTarget(\n    card: HTMLDivElement,\n    event: MouseEvent,\n    messageID: string,\n  ) {\n    const cardRect = card.getBoundingClientRect();\n    const popupRect = document\n      .querySelector(`.${this.name}`)!\n      .getBoundingClientRect();\n    let x = event.clientX - popupRect.left + cardRect.left;\n    let y = event.clientY - popupRect.top + cardRect.top;\n\n    let target = document.elementFromPoint(x, y);\n    let closestMessage = target?.closest(\".message\");\n    let closestMessageID = new El(closestMessage as HTMLDivElement).data(\n      \"messageId\",\n    );\n\n    if (target && closestMessageID === messageID) {\n      return { target, x, y };\n    }\n    const targetRect = (event.target as HTMLElement).getBoundingClientRect();\n    // If click element is obscured, rasterize the target and test if some point is free\n    // doing 10 steps in each direction, with a minimum of 5 px is some arbitrary number chosen, \n    // but i think its quite okay in regards of accuracy and performance\n    const dx = Math.min(targetRect.width / 10, 5);\n    const dy = Math.min(targetRect.height / 10, 5);\n    for (let vert = targetRect.top + 1; vert < targetRect.bottom; vert += dy) {\n      y = vert - popupRect.top + cardRect.top;\n      for (let hor = targetRect.left + 1; hor < targetRect.right; hor += dx) {\n        x = hor - popupRect.left + cardRect.left;\n        target = document.elementFromPoint(x, y);\n        closestMessage = target?.closest(\".message\");\n        closestMessageID = new El(closestMessage as HTMLDivElement).data(\n          \"messageId\",\n        );\n\n        if (target && closestMessageID === messageID) return { target, x, y };\n      }\n    }\n\n    return { target: null, x, y };\n  }\n\n  protected delegateEvent(n: Node, ev: MouseEvent) {\n    const node = new El(n as HTMLDivElement);\n    const card = new El(`.${this.moduleName}`).element.querySelector(\n      `[data-message-id=\"${node.data(\"messageId\")}\"]`,\n    ) as HTMLDivElement;\n    // Card not found? strange.. just return\n    if (!card) return;\n    card.scrollIntoView();\n    // Get target element on \"real\" chat-card\n    const { target, x, y } = Toasted.findTarget(\n      card,\n      ev,\n      node.data(\"messageId\")!,\n    );\n    // If for some reason wrong one was found.. just do nothing\n    if (!target) return;\n\n    const event = new MouseEvent(ev.type, {\n      bubbles: true,\n      cancelable: true,\n      shiftKey: ev.shiftKey,\n      metaKey: ev.metaKey,\n      ctrlKey: ev.ctrlKey,\n      clientX: x,\n      clientY: y,\n    });\n\n    consola.info({\n      title: `${this.moduleName} | Delegating event to chat log`,\n      data: {\n        target, x, y, event,\n      },\n    })\n\n\n    target.dispatchEvent(event);\n  }\n\n  protected handleMouseEvent(ev: MouseEvent) {\n    const targetElement = ev.target as HTMLElement;\n    const node = targetElement?.closest(\".message\");\n    if (!node) return;\n    // activate chat\n    const tabBtn = document.getElementById(\"sidebar-tabs\")?.children[0];\n    if (tabBtn && !tabBtn.classList.contains(\"active\")) {\n      tabBtn.dispatchEvent(\n        new MouseEvent(\"click\", { bubbles: true, cancelable: true }),\n      );\n    }\n\n    const sidebar = tabBtn?.closest(\"#sidebar\");\n    if (sidebar && sidebar?.classList.contains(\"collapsed\")) {\n      Toasted.expandSidebarInstant(sidebar as HTMLDivElement);\n    }\n    this.delegateEvent(node, ev);\n    node.remove();\n  }\n\n  protected addMessage(node: ChildNode) {\n    if (!this.ready) return;\n    const div = document.querySelector(`.${this.moduleName}`) ?? document.querySelector(`#${this.lowercaseName}`);\n    if (!div) {\n      if (this.DEBUG) {\n        consola.error(`${this.moduleName} | Chat log not found`, { this: this, node, div });\n      }\n      throw new Error(\"Chat log not found\");\n    }\n\n    const { messageId } = (node as HTMLElement).dataset;\n    if (!messageId) throw new Error(\"Message ID not found\");\n\n    const oldNode = div.querySelector(`[data-message-id=\"${messageId}\"]`);\n    if (oldNode) return this.updateMessage(node, oldNode);\n    if (div.children.length >= this.maxMessagesOnScreen) {\n      div.firstElementChild?.remove();\n    }\n\n    div.appendChild(node);\n    TweenMax.from(node, 0.3, {\n      height: 0,\n      onComplete: () => {\n        (node as HTMLDivElement).style.height = \"\"\n        if (this.DEBUG) consola.success(`${this.moduleName} | Toasted message ${messageId}`);\n\n        setTimeout(() => {\n          this.removeMessage(node);\n        }, this.fadeOutDelay);\n      },\n    });\n  }\n\n  protected removeMessage(node: ChildNode, { time = 0.3, delay = this.fadeOutDelay } = {}) {\n    if (this.fadeOutDelay < 0) return;\n\n    TweenMax.to(node, time, {\n      opacity: 0,\n      height: 0,\n      delay,\n      onComplete: () => { node.remove(); },\n    });\n  }\n\n  protected updateMessage(newNode: ChildNode, oldNode: Node) {\n    oldNode.parentNode?.replaceChild(newNode, oldNode);\n    this.removeMessage(newNode);\n  }\n}\n","import type { FontLoader, Font, CustomFamilies, ParsedFont, CustomFamily } from './types';\n\nexport class CustomLoader implements FontLoader {\n  private readonly fonts_: Font[];\n  private readonly uris_: string[];\n\n  constructor(config: CustomFamilies) {\n    this.fonts_ = [];\n    this.uris_ = config.urls || [];\n    this.parseFamilyConfig_(config.families);\n  }\n\n  /**\n   * Returns parsed uris strings\n   */\n  getUris(): string[] {\n    return this.uris_ || [];\n  }\n\n  /**\n   * Return all font's that should be loaded\n   */\n  getFonts(): Font[] {\n    return this.fonts_;\n  }\n\n  /**\n   * Returns font object array\n   */\n  getParsedFonts(): ParsedFont[] {\n    // TODO: implement with native font loader\n    return [];\n  }\n\n  /**\n   * Parsing config to separate string and object families\n   * @param families\n   * @private\n   */\n  private parseFamilyConfig_(families: (string | CustomFamily)[]): void {\n    families.forEach((family) => {\n      if (typeof family !== 'string') {\n        this.fonts_.push({ family: family.name, variation: 'n4' });\n        this.uris_?.push(family.url);\n      } else {\n        const font = family.split(':');\n        const fontName = font[0];\n        let fontVariants = font[1]?.split(',');\n        if (!fontVariants || fontVariants.length < 1) {\n          fontVariants = ['n4'];\n        }\n        fontVariants.forEach((fontVariant) => {\n          this.fonts_.push({\n            family: fontName,\n            variation: fontVariant,\n          });\n        });\n      }\n    });\n  }\n}\n","import type { ParsedFont } from '../types';\n\nexport class CssParser {\n  private css_: string;\n  private rules_: ParsedFont[] = [];\n\n  constructor(fontFaceResponseText: string) {\n    this.css_ = fontFaceResponseText;\n  }\n\n  /**\n   * Returns ParsedFont array of parsed CSS\n   */\n  public getParsedFonts(): ParsedFont[] {\n    return this.rules_;\n  }\n\n  /**\n   * Parses CSS into array of ParsedFont object\n   */\n  public parseCSS() {\n    this.css_ = this.removeNewLines_(this.css_);\n    const blocks = this.css_.split('}');\n    blocks.pop();\n    blocks.forEach((block) => {\n      const pair = block.split('{');\n      const parsed = this.parseCSSBlock_(pair[1]);\n\n      this.rules_.push({\n        fontFamily: parsed['font-family'],\n        fontStyle: parsed['font-style'],\n        fontWeight: parsed['font-weight'],\n        src: parsed.src,\n        unicodeRange: parsed['font-range'],\n      });\n    });\n  }\n\n  /**\n   * Parsing css block\n   * @param css\n   * @private\n   */\n  private parseCSSBlock_(css: string): {\n    'font-family': string;\n    'font-style': string;\n    'font-weight': string;\n    src: string;\n    'font-range': string;\n  } {\n    const rule: any = {};\n    const declarations = css.split(';');\n    declarations.pop();\n    declarations.forEach((declaration) => {\n      const loc = declaration.indexOf(':');\n      const property = declaration.substring(0, loc).trim();\n      let value = declaration.substring(loc + 1).trim();\n      if (value[0] === \"'\" && value[value.length - 1] === \"'\") {\n        value = value.replace(/'/g, '');\n      }\n\n      if (property != '' && value != '') rule[property] = value;\n    });\n    return rule;\n  }\n\n  /**\n   * Removes all empty lines from CSS\n   * @param css\n   * @private\n   */\n  private removeNewLines_(css: string) {\n    return css.replace(/\\n/g, '');\n  }\n}\n","/** Source: https://github.com/typekit/webfontloader/blob/master/src/modules/google/fontapiparser.js */\n\nimport type { Font } from '../types';\n\n\nexport class FontParser {\n  private fontFamilies: string[];\n  private parsedFonts: Font[];\n  private fontTestStrings: Record<string, string>;\n\n  private INT_FONTS = {\n    latin: 'BESbswy',\n    'latin-ext': '\\u00E7\\u00F6\\u00FC\\u011F\\u015F',\n    cyrillic: '\\u0439\\u044f\\u0416',\n    greek: '\\u03b1\\u03b2\\u03a3',\n    khmer: '\\u1780\\u1781\\u1782',\n    Hanuman: '\\u1780\\u1781\\u1782', // For backward compatibility\n  };\n  private WEIGHTS = {\n    thin: '1',\n    extralight: '2',\n    'extra-light': '2',\n    ultralight: '2',\n    'ultra-light': '2',\n    light: '3',\n    regular: '4',\n    book: '4',\n    medium: '5',\n    'semi-bold': '6',\n    semibold: '6',\n    'demi-bold': '6',\n    demibold: '6',\n    bold: '7',\n    'extra-bold': '8',\n    extrabold: '8',\n    'ultra-bold': '8',\n    ultrabold: '8',\n    black: '9',\n    heavy: '9',\n    l: '3',\n    r: '4',\n    b: '7',\n  };\n  private STYLES = {\n    i: 'i',\n    italic: 'i',\n    n: 'n',\n    normal: 'n',\n  };\n  private VARIATION_MATCH = new RegExp(\n    '^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|' +\n    '(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i' +\n    '|normal|italic)?$'\n  );\n\n  constructor(fontFamilies: string[]) {\n    this.fontFamilies = fontFamilies;\n    this.parsedFonts = [];\n    this.fontTestStrings = {};\n  }\n\n  public parse(): void {\n    for (const fontFamilyString of this.fontFamilies) {\n      const elements = fontFamilyString.split(':');\n      const fontFamily = elements[0].replace(/\\+/g, ' ');\n      let variations = ['n4'];\n\n      if (elements.length >= 2) {\n        const fvds = this.parseVariations(elements[1]);\n        if (fvds.length > 0) {\n          variations = fvds;\n        }\n        if (elements.length === 3) {\n          const subsets = this.parseSubsets(elements[2]);\n          if (subsets.length > 0) {\n            const fontTestString = this.INT_FONTS[subsets[0] as keyof typeof this.INT_FONTS];\n            if (fontTestString) {\n              this.fontTestStrings[fontFamily] = fontTestString;\n            }\n          }\n        }\n      }\n\n      // For backward compatibility\n      if (!this.fontTestStrings[fontFamily]) {\n        const hanumanTestString = this.INT_FONTS[fontFamily as keyof typeof this.INT_FONTS];\n        if (hanumanTestString) {\n          this.fontTestStrings[fontFamily] = hanumanTestString;\n        }\n      }\n\n      for (const variation of variations) {\n        this.parsedFonts.push({\n          family: fontFamily,\n          variation,\n        });\n      }\n    }\n  }\n\n  private generateFontVariationDescription(variation: string) {\n    if (!variation.match(/^[\\w-]+$/)) {\n      return '';\n    }\n    const normalizedVariation = variation.toLowerCase();\n    const groups = this.VARIATION_MATCH.exec(normalizedVariation);\n    if (groups == null) {\n      return '';\n    }\n    const styleMatch = this.normalizeStyle(groups[2] as keyof typeof this.STYLES);\n    const weightMatch = this.normalizeWeight(groups[1] as keyof typeof this.WEIGHTS);\n    return [styleMatch, weightMatch].join('');\n  }\n\n  private normalizeStyle(parsedStyle: keyof typeof this.STYLES | '' | null) {\n    if (parsedStyle == null || parsedStyle == '') {\n      return 'n';\n    }\n    return this.STYLES[parsedStyle];\n  }\n\n  private normalizeWeight(parsedWeight?: keyof typeof this.WEIGHTS | '' | number) {\n    if (parsedWeight == null || parsedWeight == '') {\n      return '4';\n    }\n    if (typeof parsedWeight === 'string') {\n      const weight = this.WEIGHTS[parsedWeight];\n      if (weight) {\n        return weight;\n      }\n    }\n    if (typeof parsedWeight === 'number') {\n      if (isNaN(parsedWeight)) {\n        return '4';\n      }\n\n    }\n    return parsedWeight.toString().substr(0, 1);\n  }\n\n  private parseVariations(variations: string) {\n    const finalVariations: string[] = [];\n\n    if (!variations) {\n      return finalVariations;\n    }\n    const providedVariations = variations.split(',');\n    const length = providedVariations.length;\n\n    for (let i = 0; i < length; i++) {\n      const variation = providedVariations[i];\n      const fvd = this.generateFontVariationDescription(variation);\n\n      if (fvd) {\n        finalVariations.push(fvd);\n      }\n    }\n    return finalVariations;\n  }\n\n  public parseSubsets<T extends string = string>(subsets: T): T[] {\n    const finalSubsets: T[] = [];\n\n    if (!subsets) {\n      return finalSubsets;\n    }\n    return subsets.split(',') as T[];\n  }\n\n  public getFonts() {\n    return this.parsedFonts;\n  }\n\n  public getFontTestStrings() {\n    return this.fontTestStrings;\n  }\n}\n","import type { FontLoader, FontFamilies, Font, ParsedFont } from './types';\nimport { CssParser } from './utils/CSSParser';\nimport { FontParser } from './utils/FontParser';\n\nexport class GoogleFontApi {\n  private apiUrl_ = 'https://fonts.googleapis.com/css';\n  // TODO: implement google v2 api query\n  // private apiUrlV2_ = 'https://fonts.googleapis.com/css2';\n  private fonts_: string[];\n  private version_: 1 | 2;\n\n  /**\n   * @param fonts\n   * @param version\n   */\n  constructor(fonts: string[], version: 1 | 2 = 1) {\n    this.fonts_ = fonts;\n    this.version_ = version;\n  }\n\n  /**\n   * Builds font googleapis url from given fonts in constructor\n   * @return string\n   */\n  public buildUri(): string {\n    const fontApiParser = new FontParser(this.fonts_);\n    fontApiParser.parse();\n    const request = fontApiParser.getFonts().map((font) => {\n      const fontString = `${font.family}:${font.variation}`;\n      return fontString.replace(/\\s/g, '+');\n    });\n    const requestString: string = request.join('|');\n    return `${this.apiUrl_}?family=${requestString}`;\n  }\n}\n\nexport class GoogleLoader implements FontLoader {\n  private fonts_: FontFamilies;\n  private uri_: string | undefined;\n\n  constructor(fonts: FontFamilies) {\n    this.fonts_ = fonts;\n    this.generateUri_();\n  }\n\n  /**\n   * Returns google uri to get all the fonts\n   */\n  public getUris(): string[] {\n    return this.uri_ ? [this.uri_] : [];\n  }\n\n  /**\n   * Return all google font's that should be loaded\n   */\n  public getFonts(): Font[] {\n    const fontApiParser = new FontParser(this.fonts_.families);\n    fontApiParser.parse();\n    return fontApiParser.getFonts();\n  }\n\n  /**\n   * Returns ParsedFont array for native font loading\n   */\n  public async getParsedFonts(): Promise<ParsedFont[]> {\n    if (!this.uri_) {\n      throw new Error('No uri provided. Nothing to parse.');\n    }\n    const fontResponse = await fetch(this.uri_).then((response) => response.text());\n    const cssParser = new CssParser(fontResponse);\n    cssParser.parseCSS();\n    return cssParser.getParsedFonts();\n  }\n\n  /**\n   * Generates google font api url from given array of fonts\n   */\n  private generateUri_(): void {\n    const googleFontApi = new GoogleFontApi(this.fonts_.families);\n    this.uri_ = googleFontApi.buildUri();\n  }\n}\n","import type { Font, LoadingMethod } from '../types';\nimport { FontEvents } from './EventBus';\n\nexport class FontWatcher {\n  private font_: Font;\n  private load_: LoadingMethod;\n\n  constructor(font: Font, load: LoadingMethod) {\n    this.font_ = font;\n    this.load_ = load;\n\n    this.loading_();\n  }\n\n  private loading_() {\n    document.dispatchEvent(\n      new CustomEvent(FontEvents.FONT_LOADING, { detail: `${this.font_.family}:${this.font_.variation}` })\n    );\n  }\n\n  public getFont(): Font {\n    return this.font_;\n  }\n\n  public watch(): boolean {\n    return document.fonts.check(`16px ${this.font_.family}`, 'BESbswy');\n  }\n}\n","import type { Font, LoadingMethod } from '../types';\nimport { FontEvents } from './EventBus';\nimport { FontWatcher } from './FontWatcher';\n\nexport class Watcher {\n  private fontWatchers_: FontWatcher[] = [];\n  private loadedFonts_: string[] = [];\n  private watched_ = false;\n\n  public add(font: Font, load: LoadingMethod) {\n    this.fontWatchers_.push(new FontWatcher(font, load));\n  }\n\n  public fontLoaded(fontName: string) {\n    this.loadedFonts_.push(fontName);\n  }\n\n  public watchFonts() {\n    if (!this.watched_) {\n      this.watched_ = true;\n      let atLeastOneLoaded = false;\n      this.fontWatchers_.forEach((fontWatcher) => {\n        const font = fontWatcher.getFont();\n        const loaded = this.loadedFonts_.includes(font.family) || fontWatcher.watch();\n        if (loaded) {\n          atLeastOneLoaded = true;\n        }\n        document.dispatchEvent(\n          new CustomEvent(loaded ? FontEvents.FONT_ACTIVE : FontEvents.FONT_INACTIVE, {\n            detail: `${font.family}:${font.variation}`,\n          })\n        );\n      });\n      document.dispatchEvent(new CustomEvent(atLeastOneLoaded ? FontEvents.ACTIVE : FontEvents.INACTIVE, {}));\n    }\n  }\n}\n","import { CustomLoader } from './CustomLoader';\nimport { GoogleLoader } from './GoogleLoader';\nimport type { FontsLoaderDefaultConfig, FontsLoaderConfig, ParsedFont } from './types';\nimport { EventBus, FontEvents } from './utils/EventBus';\nimport { Watcher } from './utils/Watcher';\n\nconst DEFAULT_CONFIG: FontsLoaderDefaultConfig = {\n  events: false,\n  classes: false,\n  timeout: 3000,\n};\n\n/**\n * Main function that loads all the fonts to <link /> tag\n * @param fontsLoaderConfig\n */\nexport const FontsLoader = async (fontsLoaderConfig: FontsLoaderConfig): Promise<void> => {\n  const config = {\n    ...DEFAULT_CONFIG,\n    ...fontsLoaderConfig,\n  };\n  const watcher = new Watcher();\n  if (config.classes || config.events) {\n    new EventBus(config);\n  }\n  if (config.google) {\n    const googleLoader = new GoogleLoader(config.google);\n    if (config.google.load === 'native') {\n      await loadFontToBrowser_(await googleLoader.getParsedFonts());\n    } else {\n      googleLoader.getUris().forEach(addLinkElement_);\n    }\n    googleLoader.getFonts().forEach((font) => {\n      watcher.add(font, config.google?.load || 'link');\n    });\n  }\n  if (config.custom) {\n    if (config.custom.load === 'native') {\n      // TODO: implement native loader\n      throw new Error('Native load is not implemented for custom fonts.');\n    }\n    const customLoader = new CustomLoader(config.custom);\n    customLoader.getUris().forEach(addLinkElement_);\n    customLoader.getFonts().forEach((font) => {\n      watcher.add(font, 'link');\n    });\n  }\n  if (config.classes || config.events) {\n    document.dispatchEvent(new CustomEvent(FontEvents.LOADING, {}));\n    document.fonts.onloadingdone = (event: Event) => {\n      (event as FontFaceSetLoadEvent).fontfaces.forEach(async fontFace => {\n        if (fontFace.status === 'loaded') {\n          watcher.fontLoaded(fontFace.family);\n        }\n      });\n      watcher.watchFonts();\n    };\n    setTimeout(() => {\n      watcher.watchFonts();\n    }, config.timeout);\n  }\n};\n\n/**\n * Native fonts to browser insert\n * @param fonts\n */\nconst loadFontToBrowser_ = async (fonts: ParsedFont[]): Promise<void> => {\n  for (const font of fonts) {\n    const fontFace = new FontFace(font.fontFamily, font.src, {\n      style: font.fontStyle,\n      unicodeRange: font.unicodeRange,\n      weight: font.fontWeight,\n    });\n    await fontFace.load();\n    document.fonts.add(fontFace);\n  }\n};\n\n/**\n * Creates new <link rel=\"stylesheet\" /> with given href and async if needed\n * @param href\n */\nconst addLinkElement_ = (href: string): void => {\n  const link = document.createElement('link');\n  link.rel = 'stylesheet';\n  link.href = href;\n  link.media = 'all';\n  document.head.appendChild(link);\n};\n","import { Tome } from 'src/class/Tome';\nimport { FontsLoader } from 'src/modules/fontLoader/FontLoader';\n\nexport class Narrator extends Tome {\n  public static fonts = [\n    \"Caslon\",\n    \"CaslonAntique\",\n    \"SignikaBold\",\n    \"Riffic\",\n    \"IronSans\",\n    \"LinLibertine\",\n    \"TimesNewRomance\",\n    \"TimesNewYorker\",\n    \"LPEducational\",\n    \"Cardinal\",\n    \"OldLondon\",\n    \"StoneHenge\",\n    \"SunnyDay\",\n    \"PaulSignature\",\n    \"LemonTuesday\",\n    \"FairProsper\",\n    \"BalletHarmony\",\n    \"MagieraScript\",\n    \"Cathallina\",\n    \"Hamish\",\n    \"DreamersBrush\",\n    \"FastInMyCar\",\n    \"ChildWriting\",\n    \"Kindergarten\",\n    \"FuturaHandwritten\",\n    \"Fewriter\",\n    \"TrashHand\",\n    \"GoodBrush\",\n    \"BaksoSapi\",\n    \"SuplexmentaryComic\",\n    \"ComicInk\",\n    \"DreamyLand\",\n    \"Yikes\",\n    \"GangOfThree\",\n    \"JianGkrik\",\n    \"Yozakura\",\n    \"Hiroshio\",\n    \"ArabDances\",\n    \"Rooters\",\n    \"Subway\",\n    \"Himagsikan\",\n    \"MilTown\",\n    \"Galactico\",\n    \"Oko\",\n    \"Ethnocentric\",\n    \"VenusRising\",\n    \"StampAct\",\n    \"Kirsty\",\n    \"Western\",\n    \"BreakAway\",\n    \"YoungerThanMe\",\n    \"Underground\",\n    \"VarsityTeam\",\n    \"Valentino\",\n    \"GlassHouses\",\n    \"Makayla\",\n    \"DancingVampyrish\",\n    \"Codex\",\n    \"DSNetStamped\",\n    \"HappyFrushZero\",\n    \"Shoplifter\",\n    \"Stereofidelic\",\n    \"Headache\",\n    \"HorrorHouse\",\n    \"GhostTheory2\",\n    \"Syemox\",\n    \"GhostChase\"\n  ] as const;\n  public static fontWeights = [\n    \"100\",\n    \"200\",\n    \"300\",\n    \"400\",\n    \"500\",\n    \"600\",\n    \"700\",\n    \"800\",\n    \"900\"\n  ] as const;\n  public static fontStyles = [\n    \"normal\",\n    \"italic\",\n    \"oblique\"\n  ] as const;\n\n  public get titleFont() {\n    return this.getSetting<typeof Narrator['fonts'][number]>(\"Title Font\") ?? \"GhostTheory2\";\n  }\n  public static get titleFont() {\n    return game.settings?.get('wonderlost', 'narrator-title-font') as typeof Narrator['fonts'][number]\n      ?? \"GhostTheory2\" as typeof Narrator['fonts'][number];\n  }\n  public static set titleFont(value: typeof Narrator['fonts'][number]) {\n    game.settings?.set('wonderlost', 'narrator-title-font', value);\n  }\n\n  public get textFont() {\n    return this.getSetting<typeof Narrator['fonts'][number]>(\"Text Font\") ?? \"GhostTheory2\";\n  }\n  public static get textFont() {\n    return game.settings?.get('wonderlost', 'narrator-text-font') as typeof Narrator['fonts'][number]\n      ?? \"GhostTheory2\";\n  }\n  public static set textFont(value: typeof Narrator['fonts'][number]) {\n    game.settings?.set('wonderlost', 'narrator-text-font', value);\n  }\n\n  public get titleWeight() {\n    return this.getSetting<typeof Narrator['fontWeights'][number]>(\"Title Weight\") ?? \"400\";\n  }\n  public static get titleWeight() {\n    return game.settings?.get('wonderlost', 'narrator-title-weight') as typeof Narrator['fontWeights'][number]\n      ?? \"400\";\n  }\n  public static set titleWeight(value: typeof Narrator['fontWeights'][number]) {\n    game.settings?.set('wonderlost', 'narrator-title-weight', value);\n  }\n\n  constructor(DEBUG = false) {\n    super({\n      moduleName: \"Narrator\",\n      moduleDescription: \"An extremely customizable on screen narrator system\",\n      hooks: new Map([\n        ['ready', (app, data) => {\n          // Load some essential fonts we use in PIXI\n          FontsLoader({\n            custom: {\n              families: [Narrator.titleFont, Narrator.textFont],\n            },\n          });\n          // async load everything else\n          let oFonts = [];\n          for (let idx = Narrator.fonts.length - 1; idx >= 0; --idx) {\n            if (Narrator.fonts[idx] === Narrator.titleFont || Narrator.fonts[idx] === Narrator.textFont) {\n              continue;\n            }\n            oFonts.push(Narrator.fonts[idx]);\n          }\n          const aLoader = async function (fonts: string[]) {\n            FontsLoader({\n              custom: {\n                families: fonts,\n              },\n            });\n          };\n\n          aLoader(oFonts);\n        }]\n      ]),\n      socketFns: new Map([]),\n      DEBUG\n    })\n\n    this.registerSettings([\n      {\n        name: \"Title Font\",\n        hint: \"The font used for the title text\",\n        type: String,\n        scope: 'world',\n        defaultValue: \"GhostTheory2\",\n        choices: Object.fromEntries(Narrator.fonts.map((font) => [font, font])),\n      },\n      {\n        name: \"Text Font\",\n        hint: \"The font used for the text body\",\n        type: String,\n        scope: 'world',\n        defaultValue: \"GhostTheory2\",\n        choices: Object.fromEntries(Narrator.fonts.map((font) => [font, font])),\n      },\n      {\n        name: \"Title Weight\",\n        hint: \"The weight of the title font\",\n        type: String,\n        scope: 'world',\n        defaultValue: \"400\",\n        choices: Object.fromEntries(Narrator.fontWeights.map((weight) => [weight, weight])),\n      }\n    ]);\n  }\n}\n","import consola from 'consola';\nimport { Toasted } from \"./submodules/toasted/Toasted\";\nimport { Narrator } from './submodules/narrator/Narrator';\n\ntype ToastedTuple = ['Toasted', typeof Toasted];\ntype NarratorTuple = ['Narrator', typeof Narrator];\n\nclass Wonderlost {\n  public tomes = new Map<'Toasted' | 'Narrator', typeof Toasted | typeof Narrator>([\n    ['Toasted', Toasted] as ToastedTuple,\n    ['Narrator', Narrator] as NarratorTuple,\n  ])\n\n  constructor(public DEBUG = false) {\n    this.DEBUG = DEBUG;\n    consola.info(\"Wonderlost | Initialized\", this);\n  }\n\n  initializeTomes() {\n    for (const [tomeName, tome] of this.tomes) {\n      new tome(this.DEBUG).initialize();\n\n      if (this.DEBUG) {\n        consola.info(`Wonderlost | Initialized ${tomeName}`, tome);\n      }\n    }\n  }\n}\n\nHooks.once(\"init\", async function () {\n  consola.start(\"Wonderlost | Initialized\");\n  new Wonderlost(true).initializeTomes();\n  consola.success(\"Wonderlost | Ready\");\n});\n\n// Hooks.once(\"ready\", async function () { });\n\n"],"names":["LogLevels","silent","Number","NEGATIVE_INFINITY","fatal","error","warn","log","info","success","fail","ready","start","box","debug","trace","verbose","POSITIVE_INFINITY","LogTypes","level","isObject","value","_defu","baseObject","defaults","namespace","merger","object","Object","assign","key","Array","isArray","toString","defu","arguments_","reduce","p","c","isLogObj","arg","obj","prototype","call","message","args","stack","paused","queue","Consola","constructor","options","types","this","_normalizeLogLevel","reporters","throttle","throttleMin","formatOptions","date","colors","compact","type","_wrapLogFn","raw","mockFn","mockTypes","_lastLog","prompt","opts","Error","create","instance","_mockFn","withDefaults","withTag","tag","addReporter","reporter","push","removeReporter","i","indexOf","splice","setReporters","wrapAll","wrapConsole","wrapStd","restoreAll","restoreConsole","restoreStd","console","_wrapStream","stdout","stderr","stream","__write","write","data","String","trim","_restoreStream","pauseLogs","resumeLogs","_queue","item","_logFn","isRaw","logObj","Date","length","unshift","additional","split","join","toLowerCase","resolveLog","newLog","repeated","count","args2","_log","clearTimeout","timeout","diffTime","time","getTime","serializedLog","JSON","stringify","isSameLog","serialized","setTimeout","input","defaultLevel","add","remove","clear","withScope","mock","pause","resume","BrowserReporter","defaultColor","levelColorMap","typeColorMap","_getLogFn","__error","__warn","__log","consoleLogFn","style","badge","filter","Boolean","slice","consola","createConsola$1","options2","Promise","resolve","confirm","createConsola","FontEvents","__defProp","defineProperty","__publicField","enumerable","configurable","writable","__defNormalProp","isAElement","selector","HTMLElement","El","element","t","element2","document","querySelector","self","toggleClass","className","includes","forEach","classList","toggle","addClass","singleClass","removeClass","hasClass","contains","replaceWith","string","outerHTML","replaceWithElement","tagName","idForNewElement","newEl","createElement","id","parentNode","replaceChild","html","innerHTML","empty","check","trueOrFalse","HTMLInputElement","checked","TypeError","click","dispatchEvent","MouseEvent","view","window","bubbles","cancelable","expression","wrap","classForDiv","wrapper","insertBefore","removeChild","appendChild","src","srcString","HTMLImageElement","alt","altString","parent","parentElement","unset","properties","removeAttribute","set","setObj","entries","setAttribute","firstChild","firstElementChild","child","insertAt","insertAdjacentHTML","append","prepend","children","childNodes","text","txt","textContent","content","textChild","s","textEl","createTextNode","_type","name","_name","htmlFor","elementTheLabelIsFor","idForEl","val","newVal","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","HTMLProgressElement","getFullYear","getMonth","getDate","dataSuffix","getAttribute","dataset","on","event","listener","addEventListener","once","eventName","eventHandler","now","detail","CustomEvent","off","removeEventListener","trigger","triggerChange","createEvent","initEvent","find","querySelectorAll","Event","nestFrom","cb","Tome","moduleName","moduleDescription","settings","hooks","Map","socketFns","DEBUG","lowercaseName","hasHooks","size","hasSettings","hasSocketFns","needsEarlyInitialization","has","pTome","globalSettings","map","scope","clientSettings","addHook","callback","overwrite","initializeHooks","title","Hooks","registerSetting","rule","Color","registerSettings","rules","initializeSettings","setting","game","register","kabob","hint","config","default","defaultValue","choices","range","onChange","requiresReload","getSetting","settingName","get","setSetting","registerSettingSubmenu","menu","registerMenu","label","icon","restricted","FormApplication","super","defaultOptions","foundry","utils","mergeObject","width","height","popOut","closeOnSubmit","template","getData","isEmpty","_updateObject","_event","formData","initializeSocketListeners","fn","socket","initialize","expandObject","acc","parse","e","str","Toasted","maxMessagesOnScreen","alwaysShowNotifications","fadeOutDelay","ToastedReady","async","app","body","div","cloneNode","ev","handleMouseEvent","_app","_options","addMessage","ui","notifications","min","max","step","expandSidebarInstant","sidebar","sideB","_collapsed","callAll","findTarget","card","messageID","cardRect","getBoundingClientRect","popupRect","x","clientX","left","y","clientY","top","target","elementFromPoint","closestMessage","closest","closestMessageID","targetRect","dx","Math","dy","vert","bottom","hor","right","delegateEvent","n","node","scrollIntoView","shiftKey","metaKey","ctrlKey","targetElement","tabBtn","getElementById","messageId","oldNode","updateMessage","TweenMax","from","onComplete","removeMessage","delay","to","opacity","newNode","CustomLoader","fonts_","uris_","urls","parseFamilyConfig_","families","getUris","getFonts","getParsedFonts","family","variation","url","font","fontName","fontVariants","fontVariant","CssParser","css_","rules_","fontFaceResponseText","parseCSS","removeNewLines_","blocks","pop","block","pair","parsed","parseCSSBlock_","fontFamily","fontStyle","fontWeight","unicodeRange","css","declarations","declaration","loc","property","substring","replace","FontParser","fontFamilies","parsedFonts","fontTestStrings","INT_FONTS","latin","cyrillic","greek","khmer","Hanuman","WEIGHTS","thin","extralight","ultralight","light","regular","book","medium","semibold","demibold","bold","extrabold","ultrabold","black","heavy","l","r","b","STYLES","italic","normal","VARIATION_MATCH","RegExp","fontFamilyString","elements","variations","fvds","parseVariations","subsets","parseSubsets","fontTestString","hanumanTestString","generateFontVariationDescription","match","normalizedVariation","groups","exec","normalizeStyle","normalizeWeight","parsedStyle","parsedWeight","weight","isNaN","substr","finalVariations","providedVariations","fvd","finalSubsets","getFontTestStrings","GoogleFontApi","apiUrl_","version_","fonts","version","buildUri","fontApiParser","requestString","GoogleLoader","uri_","generateUri_","fontResponse","fetch","then","response","cssParser","googleFontApi","EventBus","namespace_","classSeparator_","event_","config_","htmlElement_","documentElement","LOADING","handleLoading_","ACTIVE","handleActive_","INACTIVE","handleInactive_","FONT_LOADING","handleFontLoading_","FONT_ACTIVE","handleFontActive_","FONT_INACTIVE","handleFontInactive_","events","loading","addClassToHtml_","removeClassFromHtml_","active","inactive","fontloading","fontArray","fontactive","fontinactive","prefix","concat","sanitizeClassName_","FontWatcher","font_","load_","load","loading_","getFont","watch","Watcher","fontWatchers_","loadedFonts_","watched_","fontLoaded","watchFonts","atLeastOneLoaded","fontWatcher","loaded","DEFAULT_CONFIG","classes","FontsLoader","fontsLoaderConfig","watcher","google","googleLoader","loadFontToBrowser_","addLinkElement_","custom","customLoader","onloadingdone","fontfaces","fontFace","status","FontFace","href","link","rel","media","head","Narrator","static","titleFont","textFont","titleWeight","oFonts","idx","aLoader","fromEntries","fontWeights","Wonderlost","tomes","initializeTomes","tomeName","tome"],"mappings":"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WAApBA,EAASC,QACXV,EAAQT,WAAWkB,EAASvK,OAC7B,IAEH8J,EAAQR,YAAY,EAEtBxd,YAAW,KACTge,EAAQR,YAAY,GACnBhR,EAAOjN,SACX,EAOG4e,EAAqB5O,MAAOuK,IAChC,IAAK,MAAMzF,KAAQyF,EAAO,CACxB,MAAM2E,EAAW,IAAIE,SAAStK,EAAKgB,WAAYhB,EAAKxO,IAAK,CACvD1E,MAAOkT,EAAKiB,UACZE,aAAcnB,EAAKmB,aACnB2D,OAAQ9E,EAAKkB,mBAETkJ,EAAS1B,OACfja,SAASgX,MAAM3Z,IAAIse,EACpB,GAOGL,EAAmBQ,IACvB,MAAMC,EAAO/b,SAASqB,cAAc,QACpC0a,EAAKC,IAAM,aACXD,EAAKD,KAAOA,EACZC,EAAKE,MAAQ,MACbjc,SAASkc,KAAKpZ,YAAYiZ,EAAK,ECrF3B,MAAOI,UAAiB9U,EACrB+U,aAAe,CACpB,SACA,gBACA,cACA,SACA,WACA,eACA,kBACA,iBACA,gBACA,WACA,YACA,aACA,WACA,gBACA,eACA,cACA,gBACA,gBACA,aACA,SACA,gBACA,cACA,eACA,eACA,oBACA,WACA,YACA,YACA,YACA,qBACA,WACA,aACA,QACA,cACA,YACA,WACA,WACA,aACA,UACA,SACA,aACA,UACA,YACA,MACA,eACA,cACA,WACA,SACA,UACA,YACA,gBACA,cACA,cACA,YACA,cACA,UACA,mBACA,QACA,eACA,iBACA,aACA,gBACA,WACA,cACA,eACA,SACA,cAEKA,mBAAqB,CAC1B,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEKA,kBAAoB,CACzB,SACA,SACA,WAGF,aAAWC,GACT,OAAOlkB,KAAK8R,WAA6C,eAAiB,cAC3E,CACM,oBAAWoS,GAChB,OAAO/S,KAAK9B,UAAU2C,IAAI,aAAc,wBACnC,cACN,CACM,oBAAWkS,CAAUlmB,GAC1BmT,KAAK9B,UAAU/D,IAAI,aAAc,sBAAuBtN,EACzD,CAED,YAAWmmB,GACT,OAAOnkB,KAAK8R,WAA6C,cAAgB,cAC1E,CACM,mBAAWqS,GAChB,OAAOhT,KAAK9B,UAAU2C,IAAI,aAAc,uBACnC,cACN,CACM,mBAAWmS,CAASnmB,GACzBmT,KAAK9B,UAAU/D,IAAI,aAAc,qBAAsBtN,EACxD,CAED,eAAWomB,GACT,OAAOpkB,KAAK8R,WAAmD,iBAAmB,KACnF,CACM,sBAAWsS,GAChB,OAAOjT,KAAK9B,UAAU2C,IAAI,aAAc,0BACnC,KACN,CACM,sBAAWoS,CAAYpmB,GAC5BmT,KAAK9B,UAAU/D,IAAI,aAAc,wBAAyBtN,EAC3D,CAED,WAAA6B,CAAY4P,GAAQ,GAClBgD,MAAM,CACJtD,WAAY,WACZC,kBAAmB,sDACnBE,MAAO,IAAIC,IAAI,CACb,CAAC,QAAS,CAACgF,EAAK1R,KAEdggB,EAAY,CACVO,OAAQ,CACNvK,SAAU,CAACmL,EAASE,UAAWF,EAASG,aAI5C,IAAIE,EAAS,GACb,IAAK,IAAIC,EAAMN,EAASnF,MAAMpb,OAAS,EAAG6gB,GAAO,IAAKA,EAChDN,EAASnF,MAAMyF,KAASN,EAASE,WAAaF,EAASnF,MAAMyF,KAASN,EAASG,UAGnFE,EAAO3iB,KAAKsiB,EAASnF,MAAMyF,KAEbhQ,eAAgBuK,GAC9BgE,EAAY,CACVO,OAAQ,CACNvK,SAAUgG,IAGhB,CAEA0F,CAAQF,EAAO,KAGnB7U,UAAW,IAAID,IAAI,IACnBE,UAGFzP,KAAK+Q,iBAAiB,CACpB,CACEnE,KAAM,aACN0E,KAAM,mCACN7Q,KAAMqC,OACNsN,MAAO,QACPqB,aAAc,eACdC,QAASnT,OAAOimB,YAAYR,EAASnF,MAAM1O,KAAKiJ,GAAS,CAACA,EAAMA,OAElE,CACExM,KAAM,YACN0E,KAAM,kCACN7Q,KAAMqC,OACNsN,MAAO,QACPqB,aAAc,eACdC,QAASnT,OAAOimB,YAAYR,EAASnF,MAAM1O,KAAKiJ,GAAS,CAACA,EAAMA,OAElE,CACExM,KAAM,eACN0E,KAAM,+BACN7Q,KAAMqC,OACNsN,MAAO,QACPqB,aAAc,MACdC,QAASnT,OAAOimB,YAAYR,EAASS,YAAYtU,KAAK+N,GAAW,CAACA,EAAQA,QAG/E,ECjLH,MAAMwG,EAMejV,MALZkV,MAAQ,IAAIpV,IAA8D,CAC/E,CAAC,UAAW0E,GACZ,CAAC,WAAY+P,KAGf,WAAAnkB,CAAmB4P,GAAQ,GAARzP,KAAKyP,MAALA,EACjBzP,KAAKyP,MAAQA,EACblJ,EAAQpJ,KAAK,2BAA4B6C,KAC1C,CAED,eAAA4kB,GACE,IAAK,MAAOC,EAAUC,KAAS9kB,KAAK2kB,MAClC,IAAIG,EAAK9kB,KAAKyP,OAAOkE,aAEjB3T,KAAKyP,OACPlJ,EAAQpJ,KAAK,4BAA4B0nB,IAAYC,EAG1D,EAGHnU,MAAM1C,KAAK,QAAQqG,iBACjB/N,EAAQhJ,MAAM,4BACd,IAAImnB,GAAW,GAAME,kBACrBre,EAAQnJ,QAAQ,qBAClB","x_google_ignoreList":[0,1,2]}